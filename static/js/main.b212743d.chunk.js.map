{"version":3,"sources":["constants.js","components/Map.js","components/SupplyItem.js","components/SupplyForm.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["SUPPLIES","keyBy","id","label","FOOD_CATEGORIES","MEDICINE_CATEGORIES","MONEY_CATEGORIES","ESSENTIALS_CATEGORIES","containerStyle","width","height","center","lat","lng","Map","useJsApiLoader","googleMapsApiKey","isLoaded","loadError","className","mapContainerStyle","zoom","SupplyItem","data","onChange","React","useState","setId","InputGroup","FormControl","as","event","target","value","map","key","SupplyForm","name","setName","peopleCount","setPeopleCount","floodNumber","setFloodNumber","supplies","setSupplies","updateSupplies","prevState","Form","Group","Row","controlId","Label","column","sm","Col","Control","type","Button","variant","App","Container","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"iPAIaA,EAAWC,IAAM,CAC5B,CACEC,GAAI,YACJC,MAAO,cAET,CACED,GAAI,QACJC,MAAO,4BAET,CACED,GAAI,OACJC,MAAO,uBAET,CACED,GAAI,WACJC,MAAO,cAET,CACED,GAAI,QACJC,MAAO,aAET,CACED,GAAI,aACJC,MAAO,2BAER,MAEUC,EAAkBH,IAAM,CACnC,CACEC,GAAI,iBACJC,MAAO,gBAET,CACED,GAAI,cACJC,MAAO,yBAET,CACED,GAAI,WACJC,MAAO,kBAET,CACED,GAAI,QACJC,MAAO,2BAER,MAEUE,EAAsBJ,IAAM,CACvC,CACEC,GAAI,WACJC,MAAO,qBAET,CACED,GAAI,eACJC,MAAO,yBAET,CACED,GAAI,QACJC,MAAO,kCAER,MAEUG,EAAmBL,IAAM,CACpC,CACEC,GAAI,IACJC,MAAO,8BAET,CACED,GAAI,IACJC,MAAO,8BAET,CACED,GAAI,IACJC,MAAO,uCAET,CACED,GAAI,IACJC,MAAO,uCAET,CACED,IAAK,EACLC,MAAO,iCAER,MAEUI,EAAwBN,IAAM,CACzC,CACEC,GAAI,mBACJC,MAAO,iDAET,CACED,GAAI,OACJC,MAAO,mCAET,CACED,GAAI,UACJC,MAAO,oCAET,CACED,GAAI,SACJC,MAAO,OAET,CACED,GAAI,UACJC,MAAO,eAGR,MCzGGK,G,OAAiB,CACrBC,MAAO,OACPC,OAAQ,SAGJC,EAAS,CACbC,IAAK,UACLC,IAAK,YAwBQC,EArBH,WAAO,IAAD,EACgBC,YAAe,CAC7CC,iBDf8B,4CCcxBC,EADQ,EACRA,SAGR,OAJgB,EACEC,UAGI,yCAEfD,EACL,yBAAKE,UAAU,iBACb,kBAAC,IAAD,CACEjB,GAAG,cACHkB,kBAAmBZ,EACnBG,OAAQA,EACRU,KAAM,IAGN,uCAGF,M,gECwBSC,EAhDI,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAAe,EACrBC,IAAMC,SAASH,EAAOA,EAAKrB,GAAK,IADX,mBAClCA,EADkC,KAC9ByB,EAD8B,KAQzC,OACE,kBAACC,EAAA,EAAD,CAAYT,UA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","file":"static/js/main.b212743d.chunk.js","sourcesContent":["import keyBy from 'lodash/keyBy';\n\nexport const GOOGLE_MAP_API_KEY = 'AIzaSyAg1v7OQflq5loAokdrpNLPFmsSqDF4-PY';\n\nexport const SUPPLIES = keyBy([\n  {\n    id: 'life-vest',\n    label: 'Áo phao',\n  },\n  {\n    id: 'water',\n    label: 'Nước uống',\n  },\n  {\n    id: 'food',\n    label: 'Thực phẩm',\n  },\n  {\n    id: 'medicine',\n    label: 'Thuốc',\n  },\n  {\n    id: 'money',\n    label: 'Tiền',\n  },\n  {\n    id: 'essentials',\n    label: 'Nhu yếu phẩm',\n  },\n], 'id');\n\nexport const FOOD_CATEGORIES = keyBy([\n  {\n    id: 'instant-noodle',\n    label: 'Mì gói',\n  },\n  {\n    id: 'canned-food',\n    label: 'Đồ hộp',\n  },\n  {\n    id: 'porridge',\n    label: 'Cháo gói',\n  },\n  {\n    id: 'bread',\n    label: 'Bánh mì mềm',\n  },\n], 'id');\n\nexport const MEDICINE_CATEGORIES = keyBy([\n  {\n    id: 'diarrhea',\n    label: 'Tiêu chảy',\n  },\n  {\n    id: 'anti-biotics',\n    label: 'Kháng sinh/panadol',\n  },\n  {\n    id: 'paste',\n    label: 'Thuốc bôi chân tay',\n  },\n], 'id');\n\nexport const MONEY_CATEGORIES = keyBy([\n  {\n    id: 100,\n    label: 'Dưới 100/hộ',\n  },\n  {\n    id: 500,\n    label: 'Dưới 500/hộ',\n  },\n  {\n    id: 1000,\n    label: 'Dưới 1 triệu/hộ',\n  },\n  {\n    id: 2000,\n    label: 'Dưới 2 triệu/hộ',\n  },\n  {\n    id: -1,\n    label: 'Trên 2 triệu/hộ',\n  },\n], 'id');\n\nexport const ESSENTIALS_CATEGORIES = keyBy([\n  {\n    id: 'personal-hygiene',\n    label: 'Vật dụng vệ sinh cá nhân',\n  },\n  {\n    id: 'soap',\n    label: 'Xà bông tắm gội',\n  },\n  {\n    id: 'laundry',\n    label: 'Xà bông giặt giũ',\n  },\n  {\n    id: 'tampon',\n    label: 'BVS',\n  },\n  {\n    id: 'clothes',\n    label: 'Quần ',\n  },\n\n], 'id');\n","import React from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport { GOOGLE_MAP_API_KEY } from '../constants';\nimport './Map.scss';\n\nconst containerStyle = {\n  width: '100%',\n  height: '100%',\n};\n\nconst center = {\n  lat: 16.618069,\n  lng: 107.390788,\n};\n\nconst Map = () => {\n  const { isLoaded, loadError } = useJsApiLoader({\n    googleMapsApiKey: GOOGLE_MAP_API_KEY,\n  });\n  if (loadError) return 'Map cannot be loaded right now, sorry.';\n\n  return isLoaded ? (\n    <div className=\"map-container\">\n      <GoogleMap\n        id=\"map-example\"\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={10}\n      >\n        { /* Child components, such as markers, info windows, etc. */ }\n        <></>\n      </GoogleMap>\n    </div>\n  ) : null;\n};\n\nexport default Map;\n","import map from 'lodash/map';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { ESSENTIALS_CATEGORIES, FOOD_CATEGORIES, MEDICINE_CATEGORIES, MONEY_CATEGORIES, SUPPLIES } from \"../constants\";\n\nconst SupplyItem = ({ data, onChange }) => {\n  const [id, setId] = React.useState(data ? data.id : '');\n\n  const handleValueChange = (event) => {\n    const { value } = event.target;\n    return onChange({ id, value });\n  };\n\n  return (\n    <InputGroup className=\"mb-3\">\n      <FormControl as=\"select\" onChange={(event) => setId(event.target.value)} value={id}>\n        <option value={SUPPLIES['life-vest'].id}>{SUPPLIES['life-vest'].label}</option>\n        <option value={SUPPLIES['water'].id}>{SUPPLIES['water'].label}</option>\n        <optgroup label={SUPPLIES['food'].label}>\n          {map(FOOD_CATEGORIES, (data) => (\n            <option key={data.id} value={data.id}>{data.label}</option>\n          ))}\n        </optgroup>\n        <optgroup label={SUPPLIES['medicine'].label}>\n          {map(MEDICINE_CATEGORIES, (data) => (\n            <option key={data.id} value={data.id}>{data.label}</option>\n          ))}\n        </optgroup>\n        <optgroup label={SUPPLIES['money'].label}>\n          {map(MONEY_CATEGORIES, (data) => (\n            <option key={data.id} value={data.id}>{data.label}</option>\n          ))}\n        </optgroup>\n        <optgroup label={SUPPLIES['essentials'].label}>\n          {map(ESSENTIALS_CATEGORIES, (data) => (\n            <option key={data.id} value={data.id}>{data.label}</option>\n          ))}\n        </optgroup>\n      </FormControl>\n\n      <FormControl value={data ? data.value : ''} onChange={handleValueChange} />\n    </InputGroup>\n  );\n};\n\nSupplyItem.propTypes = {\n  data: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.string,\n  }),\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SupplyItem;\n","import map from 'lodash/map';\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport SupplyItem from './SupplyItem';\n\nconst SupplyForm = () => {\n  const [name, setName] = React.useState('');\n  const [peopleCount, setPeopleCount] = React.useState(1);\n  const [floodNumber, setFloodNumber] = React.useState(7);\n  const [supplies, setSupplies] = React.useState([]);\n\n  // TODO: there can be duplicated data key, but it will preserve the order\n  const updateSupplies = (data) =>\n    setSupplies((prevState) => ([...prevState, data]));\n\n  return (\n    <Form>\n      <Form.Group as={Row} controlId=\"form-name\">\n        <Form.Label column sm={3}>\n          Tên\n        </Form.Label>\n        <Col sm={9}>\n          <Form.Control type=\"text\" value={name} onChange={(event) => setName(event.target.value)} />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"form-number-of-people\">\n        <Form.Label column sm={3}>\n          Số người theo đoàn cứu trợ\n        </Form.Label>\n        <Col sm={9}>\n          <Form.Control type=\"text\" value={peopleCount} onChange={(event) => setPeopleCount(event.target.value)} />\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"form-flood-number\">\n        <Form.Label column sm={3}>\n          Cứu trợ cho lũ số\n        </Form.Label>\n        <Col sm={9}>\n          <Form.Control as=\"select\" value={floodNumber} onChange={(event) => { setFloodNumber(event.target.value); }}\n          >\n            <option value=\"7\">7</option>\n            <option value=\"8\">8</option>\n            <option value=\"9\">9</option>\n          </Form.Control>\n        </Col>\n      </Form.Group>\n\n      <Form.Group as={Row} controlId=\"form-flood-number\">\n        <Form.Label column sm={3}>\n          Hàng cứu trợ\n        </Form.Label>\n        <Col sm={9}>\n          <Row>\n            <Col>\n              {map(supplies, (data) => (<SupplyItem key={data.id} data={data} onChange={updateSupplies} />))}\n              <SupplyItem onChange={updateSupplies} />\n            </Col>\n          </Row>\n        </Col>\n      </Form.Group>\n\n      <Row>\n        <Col><Button className=\"float-right\" variant=\"primary\">Lưu</Button></Col>\n      </Row>\n    </Form>\n  );\n};\n\nexport default SupplyForm;\n","import React from 'react';\nimport logo from './logo.svg';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Map from './components/Map';\nimport SupplyForm from './components/SupplyForm';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <Container className=\"app-container\">\n      <Row className=\"map\">\n        <Col><Map /></Col>\n      </Row>\n      <Row className=\"form\">\n        <Col><SupplyForm /></Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}